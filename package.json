{
  "name": "monorepo-root",
  "private": true,
  "type": "commonjs",
  "scripts": {
    "dev": "pnpm --filter @galacean/effects-demo dev",
    "preview": "pnpm --filter @galacean/effects-demo preview",
    "build": "pnpm build:core && pnpm build:others",
    "build:core": "pnpm --filter \"@max/specification\" build && pnpm --filter \"@max/math\" build",
    "build:others": "pnpm --filter \"!@max/specification\" --filter \"!@max/math\" --filter \"./packages/**\" build",
    "build:pipeline": "node ./scripts/build-pipeline.js",
    "build:plugins": "pnpm build && pnpm --filter \"./plugin-packages/**\" build",
    "build:docs": "pnpm build && pnpm build:plugins && typedoc",
    "dev:core": "pnpm --parallel --filter \"@max/specification\" --filter \"@max/math\" dev",
    "dev:all": "pnpm --parallel dev",
    "lint": "eslint --ext .ts .",
    "lint:fix": "eslint --fix --ext .ts .",
    "test": "pnpm --filter @galacean/effects-test test",
    "version": "node ./scripts/update-version",
    "changelog": "git fetch origin && node ./scripts/print-changelog",
    "check:ts": "tsc -b ./tsconfig.check.json",
    "clean:nm": "rimraf \"{packages,web-packages,plugin-packages}/**/node_modules\" && rimraf \"node_modules\"",
    "clean:dist": "rimraf \"{packages,web-packages,plugin-packages}/**/dist\"",
    "clean:artifacts": "rimraf \"{packages,web-packages,plugin-packages}/**/src/**/*+(.d.ts|.js.map)\"",
    "clean:declaration": "rimraf \"{packages,web-packages,plugin-packages}/**/*+(.tsbuildinfo)\"",
    "clean:all": "pnpm clean:artifacts && pnpm clean:declaration && pnpm clean:dist && pnpm clean:nm",
    "preinstall": "npx only-allow pnpm",
    "prepare": "husky install",
    "publish": "pnpm -r publish --no-git-checks --filter \"./packages/**\" --filter \"./plugin-packages/**\"",
    "test:watch": "pnpm --filter \"./packages/**\" test:watch",
    "test:coverage": "pnpm --filter \"./packages/**\" test:coverage"
  },
  "browserslist": [
    "iOS 9"
  ],
  "workspaces": [
    "packages/*",
    "web-packages/*",
    "plugin-packages/*"
  ],
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "tsconfigRootDir": ".",
      "project": ["**/tsconfig.json"]
    },
    "env": {
      "browser": true,
      "node": true,
      "jest": true
    },
    "globals": { "THREE": true },
    "ignorePatterns": [
      "**/{node_modules,libs}",
      "*.js",
      "*.d.ts",
      "temp"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:promise/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "plugin:compat/recommended"
    ],
    "plugins": [
      "@typescript-eslint",
      "compat"
    ],
    "settings": {
      "polyfills": [
        "WebGL2RenderingContext"
      ]
    },
    "rules": {
      "arrow-parens": ["error", "as-needed"],
      "array-bracket-spacing": ["error", "never"],
      "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
      "comma-dangle": ["error", "always-multiline"],
      "curly": "error",
      "generator-star-spacing": ["error", {
        "before": false,
        "after": true,
        "anonymous": "neither",
        "method": "neither"
      }],
      "new-parens": "error",
      "spaced-comment": "off",
      "no-multi-spaces": [
        "error",
        {
          "ignoreEOLComments": true
        }
      ],
      "no-console": ["error", { "allow": ["info", "warn", "error", "debug", "trace"] }],
      "no-inner-declarations": "error",
      "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
      "no-trailing-spaces": "error",
      "no-void": ["error", { "allowAsStatement": true }],
      "padding-line-between-statements": [
        "error",
        { "blankLine": "always", "prev": "*", "next": ["return", "break"] },
        { "blankLine": "never", "prev": "*", "next": ["case", "default"] },
        { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
        { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] }
      ],
      "promise/always-return": "off",
      "promise/catch-or-return": "error",
      "prefer-rest-params": "off",
      "semi": ["error", "always"],
      "space-in-parens": ["error", "never"],
      "@typescript-eslint/comma-spacing": "error",
      "@typescript-eslint/no-namespace": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-unused-vars": [
        "error",
        { "vars": "all", "varsIgnorePattern": "^_", "args": "none", "caughtErrors": "all", "caughtErrorsIgnorePattern": "^ignore" }
      ],
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/ban-types": ["error", { "types": { "{}": false, "Function": false, "Object": false } }],
      "@typescript-eslint/indent": ["error", 2, {
        "SwitchCase": 1,
        "ignoredNodes": [
          "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
        ]
      }],
      "@typescript-eslint/keyword-spacing": "error",
      "@typescript-eslint/no-var-requires": "off",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-unnecessary-type-arguments": "error",
      "@typescript-eslint/no-unnecessary-type-assertion": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-redundant-type-constituents": "warn",
      "@typescript-eslint/no-unsafe-return": "off",
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/no-unsafe-call": "off",
      "@typescript-eslint/object-curly-spacing": ["error", "always"],
      "@typescript-eslint/prefer-includes": "error",
      "@typescript-eslint/prefer-reduce-type-parameter": "error",
      "@typescript-eslint/prefer-ts-expect-error": "error",
      "@typescript-eslint/return-await": "error",
      "@typescript-eslint/restrict-plus-operands": "off",
      "@typescript-eslint/restrict-template-expressions": "off",
      "@typescript-eslint/space-infix-ops": ["error", { "int32Hint": false }],
      "@typescript-eslint/strict-boolean-expressions": "off",
      "@typescript-eslint/no-floating-promises": ["error", { "ignoreVoid": true, "ignoreIIFE": true }],
      "@typescript-eslint/quotes": ["error", "single"],
      "@typescript-eslint/require-await": "off",
      "@typescript-eslint/space-before-blocks": "error",
      "@typescript-eslint/space-before-function-paren": ["error", "always"],
      "@typescript-eslint/type-annotation-spacing": "error",
      "@typescript-eslint/unbound-method": "off",
      "@typescript-eslint/no-misused-promises": "off",
      "@typescript-eslint/prefer-regexp-exec": "off",
      "@typescript-eslint/semi": "error",
      "@typescript-eslint/member-delimiter-style": ["error", {
        "multiline": {
          "delimiter": "comma",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }],
      "@typescript-eslint/no-unsafe-enum-comparison": "warn",
      "@typescript-eslint/no-base-to-string": "off",
      "@typescript-eslint/no-duplicate-enum-values": "off",
      "@typescript-eslint/no-unsafe-assignment": "off",
      "@typescript-eslint/no-unsafe-argument": "off",
      "@typescript-eslint/consistent-type-imports": [
        "error",
        {
          "prefer": "type-imports",
          "disallowTypeAnnotations": false
        }
      ],
      "compat/compat": "error"
    },
    "overrides": [
      {
        "files": ["**/test/**/*.ts", "**/demo/**/*.ts", "**/web-packages/**/*.ts"],
        "rules": {
          "compat/compat": "off",
          "@typescript-eslint/no-unused-vars": "off"
        }
      }
    ]
  },
  "dependencies": {
    "string-hash": "^1.1.3"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.4.1",
    "@commitlint/config-conventional": "^18.4.3",
    "@manypkg/get-packages": "^2.2.0",
    "@rollup/plugin-babel": "^6.0.4",
    "@rollup/plugin-commonjs": "^25.0.7",
    "@rollup/plugin-inject": "^5.0.5",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-replace": "^5.0.5",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^11.1.6",
    "@swc/core": "^1.4.13",
    "@swc/helpers": "^0.5.8",
    "@types/chai": "4.3.14",
    "@types/chai-spies": "1.0.6",
    "@types/mocha": "10.0.1",
    "@types/node": "^22.14.0",
    "@types/wicg-file-system-access": "^2023.10.4",
    "@typescript-eslint/eslint-plugin": "^7.10.0",
    "@typescript-eslint/parser": "^7.10.0",
    "@vitejs/plugin-legacy": "^4.1.1",
    "ansi-colors": "^4.1.3",
    "chalk": "^4.1.2",
    "concurrently": "^8.2.2",
    "download": "^8.0.0",
    "enquirer": "^2.4.1",
    "eslint": "^8.56.0",
    "eslint-plugin-compat": "^4.2.0",
    "eslint-plugin-promise": "^6.1.1",
    "fs-extra": "^11.1.1",
    "husky": "^9.0.11",
    "ip": "^2.0.1",
    "jsdom": "^22.1.0",
    "lint-staged": "^15.2.2",
    "minimist": "^1.2.8",
    "pnpm": "^8.15.7",
    "prettier": "^3.2.5",
    "rimraf": "^5.0.5",
    "rollup": "^2.79.1",
    "rollup-plugin-swc3": "^0.11.0",
    "simple-git": "^3.19.1",
    "ts-node": "^10.9.2",
    "tslib": "^2.6.2",
    "typedoc": "^0.25.12",
    "typescript": "^5.4.2",
    "vite": "^4.5.3",
    "vite-plugin-externals": "^0.6.2",
    "vite-tsconfig-paths": "^4.2.2",
    "@babel/core": "^7.24.0",
    "@babel/preset-env": "^7.24.0",
    "@babel/preset-typescript": "^7.23.3"
  }
}
