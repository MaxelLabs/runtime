export { roundNumber } from './round-number';
export { intMultiplyFloat } from './int-multiply-float';
export { isPowerIntegerOfTwo } from './is-power-integer-of-two';
export { nearestPowerIntegerOfTwo } from './nearest-power-integer-of-two';
export { floorNearestPowerOfTwo } from './floor-nearest-power-of-two';
export { round } from './round';
export { IntervalType, isRangeIn } from './is-range-in';
export declare const fixed: (value: number, size: number) => number;
export declare const euclideanModulo: (n: number, m: number) => number;
export declare const mapLinear: (x: number, a1: number, a2: number, b1: number, b2: number) => number;
export declare const inverseLerp: (x: number, y: number, value: number) => number;
export declare const pingpong: (x: number, length?: number) => number;
export declare const smoothstep: (x: number, min: number, max: number) => number;
export declare const smootherstep: (x: number, min: number, max: number) => number;
export declare const randInt: (low: number, high: number) => number;
export declare const randFloat: (low: number, high: number) => number;
export declare const randFloatSpread: (range: number) => number;
export declare const seededRandom: (s: number) => number;
export declare const isPowerOfTwo: (value: number) => boolean;
export declare const ceilPowerOfTwo: (value: number) => number;
export declare const floorPowerOfTwo: (value: number) => number;
export declare function modByFloat(number: number, mod: number): number;
