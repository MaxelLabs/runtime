#usda 1.0
(
    defaultPrim = "BarChart3D"
    doc = "Maxellabs 3D引擎 - 3D柱状图表示例"
    metersPerUnit = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
    customLayerData = {
        string creator = "Maxellabs Team"
        string version = "1.0.0"
        string[] tags = ["chart", "visualization", "data", "3d"]
        dictionary maxellabs = {
            string engineVersion = "1.0.0"
            string renderPipeline = "forward"
            string blendMode = "normal"
            string chartType = "bar3d"
        }
    }
)

def Scope "BarChart3D" (
    kind = "assembly"
    doc = "3D柱状图表可视化"
)
{
    # 图表边界框
    float3 extent = [(-5, 0, -3), (5, 8, 3)]
    
    # Maxellabs 图表扩展
    custom string maxellabs:chartType = "bar3d"
    custom bool maxellabs:visible = true
    custom int maxellabs:renderOrder = 0
    custom string maxellabs:blendMode = "normal"
    
    # 数据配置
    custom string[] maxellabs:data:categories = ["Q1", "Q2", "Q3", "Q4"]
    custom string[] maxellabs:data:seriesNames = ["销售额", "利润"]
    custom float[] maxellabs:data:series1Values = [120, 150, 180, 200]
    custom float[] maxellabs:data:series2Values = [30, 45, 60, 80]
    custom color4f[] maxellabs:data:seriesColors = [(0.2, 0.6, 1.0, 1.0), (1.0, 0.4, 0.2, 1.0)]
    
    # 布局配置
    custom float3 maxellabs:layout:size = (10, 8, 6)
    custom float2 maxellabs:layout:spacing = (1.5, 1.0)
    custom float3 maxellabs:layout:origin = (0, 0, 0)
    
    # 坐标轴配置
    custom bool maxellabs:axes:x:visible = true
    custom bool maxellabs:axes:x:gridLines = true
    custom string maxellabs:axes:x:title = "季度"
    custom float maxellabs:axes:x:fontSize = 0.3
    custom color4f maxellabs:axes:x:color = (0.2, 0.2, 0.2, 1.0)
    
    custom bool maxellabs:axes:y:visible = true
    custom bool maxellabs:axes:y:gridLines = true
    custom string maxellabs:axes:y:title = "数值"
    custom float2 maxellabs:axes:y:range = (0, 250)
    custom float maxellabs:axes:y:tickInterval = 50
    custom float maxellabs:axes:y:fontSize = 0.25
    custom string maxellabs:axes:y:format = "{value}万"
    
    custom bool maxellabs:axes:z:visible = true
    custom string maxellabs:axes:z:title = "类别"
    custom float maxellabs:axes:z:fontSize = 0.3
    
    # 柱状图配置
    custom float2 maxellabs:bars:size = (0.8, 0.8)
    custom string maxellabs:bars:materialType = "standard"
    custom float maxellabs:bars:metallic = 0.1
    custom float maxellabs:bars:roughness = 0.3
    
    # 动画配置
    custom bool maxellabs:animation:enabled = true
    custom float maxellabs:animation:duration = 2.0
    custom string maxellabs:animation:easing = "easeOutBounce"
    custom float maxellabs:animation:delay = 0.1
    
    # 交互配置
    custom bool maxellabs:interaction:hover:enabled = true
    custom color4f maxellabs:interaction:hover:highlightColor = (1, 1, 0, 0.3)
    custom bool maxellabs:interaction:tooltip:enabled = true
    custom string maxellabs:interaction:tooltip:template = "{series}: {value}万"
    custom bool maxellabs:interaction:selection:enabled = true
    custom bool maxellabs:interaction:selection:multiSelect = false
    
    # 图例配置
    custom bool maxellabs:legend:visible = true
    custom float3 maxellabs:legend:position = (8, 6, 0)
    custom string maxellabs:legend:orientation = "vertical"
    custom float maxellabs:legend:fontSize = 0.4
    custom float maxellabs:legend:spacing = 0.8
    
    # 标题配置
    custom string maxellabs:title:text = "季度业绩对比"
    custom float3 maxellabs:title:position = (0, 9, 0)
    custom float maxellabs:title:fontSize = 0.6
    custom color4f maxellabs:title:color = (0.1, 0.1, 0.1, 1.0)
    custom string maxellabs:title:alignment = "center"
    
    def Scope "Bars"
    {
        def Mesh "Bar_Q1_Sales" (
            references = @./primitives/cube.usda@
        )
        {
            double3 xformOp:translate = (-1.5, 0.6, -0.5)
            double3 xformOp:scale = (0.8, 1.2, 0.8)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
            
            rel material:binding = </BarChart3D/Materials/SalesMaterial>
            
            custom string maxellabs:dataCategory = "Q1"
            custom string maxellabs:dataSeries = "销售额"
            custom float maxellabs:dataValue = 120
            custom int maxellabs:barIndex = 0
        }
        
        def Mesh "Bar_Q1_Profit" (
            references = @./primitives/cube.usda@
        )
        {
            double3 xformOp:translate = (-1.5, 0.15, 0.5)
            double3 xformOp:scale = (0.8, 0.3, 0.8)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
            
            rel material:binding = </BarChart3D/Materials/ProfitMaterial>
            
            custom string maxellabs:dataCategory = "Q1"
            custom string maxellabs:dataSeries = "利润"
            custom float maxellabs:dataValue = 30
            custom int maxellabs:barIndex = 1
        }
        
        # 其他柱状图...（Q2, Q3, Q4）
    }
    
    def Scope "Axes"
    {
        def Mesh "XAxis" (
            references = @./primitives/line.usda@
        )
        {
            double3 xformOp:translate = (0, 0, 0)
            double3 xformOp:scale = (10, 1, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
            
            rel material:binding = </BarChart3D/Materials/AxisMaterial>
        }
        
        def Mesh "YAxis" (
            references = @./primitives/line.usda@
        )
        {
            double3 xformOp:translate = (-5, 4, 0)
            double3 xformOp:rotateZ = 90
            double3 xformOp:scale = (8, 1, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZ", "xformOp:scale"]
            
            rel material:binding = </BarChart3D/Materials/AxisMaterial>
        }
        
        def Mesh "ZAxis" (
            references = @./primitives/line.usda@
        )
        {
            double3 xformOp:translate = (-5, 0, 0)
            double3 xformOp:rotateY = 90
            double3 xformOp:scale = (6, 1, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateY", "xformOp:scale"]
            
            rel material:binding = </BarChart3D/Materials/AxisMaterial>
        }
    }
    
    def Scope "Labels"
    {
        def "Title" (
            references = @./text/title.usda@
        )
        {
            double3 xformOp:translate = (0, 9, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]
            
            custom string maxellabs:text:content = "季度业绩对比"
            custom float maxellabs:text:fontSize = 0.6
            custom color4f maxellabs:text:color = (0.1, 0.1, 0.1, 1.0)
        }
        
        def Scope "CategoryLabels"
        {
            def "Q1Label" (
                references = @./text/label.usda@
            )
            {
                double3 xformOp:translate = (-1.5, -0.5, 0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
                
                custom string maxellabs:text:content = "Q1"
                custom float maxellabs:text:fontSize = 0.3
            }
            
            # 其他标签...
        }
    }
    
    def Scope "Materials"
    {
        def Material "SalesMaterial"
        {
            token outputs:surface.connect = </BarChart3D/Materials/SalesMaterial/Shader.outputs:surface>
            
            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.2, 0.6, 1.0)
                float inputs:metallic = 0.1
                float inputs:roughness = 0.3
                float inputs:opacity = 1.0
                token outputs:surface
                
                custom string maxellabs:blendMode = "normal"
                custom bool maxellabs:doubleSided = false
            }
        }
        
        def Material "ProfitMaterial"
        {
            token outputs:surface.connect = </BarChart3D/Materials/ProfitMaterial/Shader.outputs:surface>
            
            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1.0, 0.4, 0.2)
                float inputs:metallic = 0.1
                float inputs:roughness = 0.3
                float inputs:opacity = 1.0
                token outputs:surface
                
                custom string maxellabs:blendMode = "normal"
                custom bool maxellabs:doubleSided = false
            }
        }
        
        def Material "AxisMaterial"
        {
            token outputs:surface.connect = </BarChart3D/Materials/AxisMaterial/Shader.outputs:surface>
            
            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.3, 0.3, 0.3)
                float inputs:metallic = 0.0
                float inputs:roughness = 0.8
                float inputs:opacity = 1.0
                token outputs:surface
            }
        }
    }
}

def Scope "Lighting"
{
    def DistantLight "DirectionalLight"
    {
        float inputs:intensity = 3.0
        color3f inputs:color = (1, 0.95, 0.8)
        float3 xformOp:rotateXYZ = (-30, 45, 0)
        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
        
        custom bool maxellabs:castShadows = true
    }
    
    def SphereLight "AmbientLight"
    {
        float inputs:intensity = 0.5
        color3f inputs:color = (0.4, 0.4, 0.6)
        float inputs:radius = 100
    }
}

def Scope "Animations"
{
    def "ChartAnimation"
    {
        custom string maxellabs:targetPrim = "/BarChart3D/Bars"
        custom bool maxellabs:autoPlay = true
        custom float maxellabs:duration = 2.0
        custom bool maxellabs:loop = false
        custom string maxellabs:easing = "easeOutBounce"
        
        # 柱状图生长动画
        custom float[] maxellabs:scaleY:keyframes = [0, 1]
        custom float[] maxellabs:scaleY:times = [0, 2]
        custom float maxellabs:staggerDelay = 0.1
    }
}

def Scope "Metadata"
{
    custom dictionary maxellabs:performance = {
        string qualityLevel = "high"
        bool enableLOD = true
        float lodDistance = 50.0
        bool enableInstancing = false
    }
    
    custom dictionary maxellabs:interaction = {
        bool enableRaycast = true
        bool enableTooltips = true
        bool enableSelection = true
        string selectionMode = "single"
    }
    
    custom dictionary maxellabs:data = {
        string dataSource = "local"
        bool enableRealTimeUpdate = false
        float updateInterval = 1.0
        string[] supportedFormats = ["json", "csv", "xml"]
    }
} 